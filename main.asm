;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Fri Apr 12 2024
; Processor: AT89C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      ORG   0000h
      JMP   Start
      ORG 	001bh  
      LJMP 	ISRTimer1 
      ORG 	0013h
      LJMP 	ExInterrupt
;====================================================================
; CODE SEGMENT

;====================================================================

      ORG   0100h
Start:
      ; Write your code here
      MOV R0, #00BH
      MOV R2, #01H 
      MOV R1, #01H 

      CLR P2.0  
      CLR P2.1
      CLR P2.2  
      CLR P2.3 

      MOV TMOD, #10H 
      MOV IE, #8CH 
      MOV TL1, #00H 
      MOV TH1, #0FAH 
      SETB TR1
      Mov R4, #01H
      mov B, #01H
Loop:	
      MOV R3, P1
      CJNE R3 , #11111111b, OBSTACLE ;Gap vat can
      MOV R2, #0AH
      Mov R4, #01H
      jmp Loop
      OBSTACLE:
		CALL TURN
		JMP Loop

;====================================================================
ISRTimer1:
      MOV TL1, #00H 
      MOV TH1, #0FAH 
      SETB TR1
      DJNZ R0, PWM1 
      MOV R0, #0BH 
      MOV A, R2 
      MOV R1, A 
      RETI 
PWM1: 
      DJNZ R1, PWM2 
      INC R1
      CLR P2.0
      CLR P2.2
      CLR P2.1
      CLR P2.3 
      RETI
PWM2:
      CJNE R4, #01H, BACK2
      SETB P2.0
      SETB P2.2
      CLR P2.1
      CLR P2.3 
      RETI
      BACK2:
		CJNE R4, #00H, TURN_RIGHT1
		SETB P2.1
		SETB P2.3
		CLR P2.0
		CLR P2.2
      RETI 
      TURN_RIGHT1:
		CLR P2.2
		CLR P2.3
		SETB P2.0
		CLR P2.1
      RETI
Delay:
      mov R5,#255
      Loop1:
		mov R6,#255
      CONT:
		DJNZ R6, Loop2
		DJNZ R5, Loop1
		ret
      Loop2:
		nop
		jmp CONT
      ret
TURN: 
      MOV R7, #04H
      MOV R2, #05H
      MOV R4, #00H
      BACK:
		CALL Delay
		DJNZ R7, BACK
		MOV R4, #02H
		MOV R7, B
      TURN_RIGHT:
		CALL Delay
		DJNZ R7, TURN_RIGHT
      RET
ExInterrupt:
      call CHONGRUNG
      INC B  
      MOV R5, B
      CJNE R5, #04H, JMP1
      MOV B, #01H
      RETI
      JMP1:
		RETI
CHONGRUNG:
      call delay
      ret
      END
